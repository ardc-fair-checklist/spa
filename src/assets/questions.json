[
    {
        "answers": [
            {
                "id": "F:q0:a0",
                "text": "No identifier"
            },
            {
                "id": "F:q0:a1",
                "text": "Local identifier or reasonably unique name"
            },
            {
                "id": "F:q0:a2",
                "text": "Web address (URL)"
            },
            {
                "id": "F:q0:a3",
                "text": "Globally unique and persistent identifier (e.g. DOI, PURL, or Handle)"
            }
        ],
        "principle": "F1. Software is assigned a globally unique and persistent identifier",
        "guidance": "A uniquely named piece of software is not the same as an identifier as it might be linked to a registry or programming language. A Uniform Resource Locator (URL) is a kind of unique identifier, but might not be persistent.",
        "id": "F:q0",
        "text": "Does the software have any identifier assigned?"
    },
    {
        "answers": [
            {
                "id": "F:q1:a0",
                "text": "No identifier"
            },
            {
                "id": "F:q1:a1",
                "text": "There is only one identifier for the entire bundle/package"
            },
            {
                "id": "F:q1:a2",
                "text": "Some components have distinct identifiers"
            },
            {
                "id": "F:q1:a3",
                "text": "Each component has a PID with reference to a top level PID"
            }
        ],
        "principle": "F1.1. Different components of the software are assigned distinct identifiers representing different levels of granularity",
        "guidance": "A persistent identifier (PID) like a DOI, PURL or Handle has the following characteristics: globally unique, citable and persistent. The granularity is decided for each software and its maturity.",
        "id": "F:q1",
        "text": "Are different components of the software assigned distinct identifiers representing different levels of granularity?"
    },
    {
        "answers": [
            {
                "id": "F:q2:a0",
                "text": "No identifier"
            },
            {
                "id": "F:q2:a1",
                "text": "Each major version (version X) is assigned an identifier"
            },
            {
                "id": "F:q2:a2",
                "text": "available versions distinctly identified"
            }
        ],
        "principle": "F1.2. Different versions of the same software are assigned distinct identifiers.",
        "guidance": "Version is one of the granularity levels identified as most relevant. Depending on the maturity of the software development, not only major versions but minor and point versions are also encouraged. For example: - each minor version (version X.Y) is assigned an identifier - Each point version (version X.Y.Z) is assigned an identifier",
        "id": "F:q2",
        "text": "Are different versions of the same software identified?"
    },
    {
        "answers": [
            {
                "id": "F:q3:a0",
                "text": "The software is not described with any metadata"
            },
            {
                "id": "F:q3:a1",
                "text": "The software has a title and a brief description"
            },
            {
                "id": "F:q3:a2",
                "text": "Title, description, and multiple fields are provided, albeit informally (not using a standard format)"
            },
            {
                "id": "F:q3:a3",
                "text": "Described comprehensively using a formal machine-readable metadata schema "
            }
        ],
        "principle": "F2. Software is described with rich metadata.",
        "guidance": "See also Interoperable and Reusable for specific questions about relationships between objects, and about specific kinds of metadata. Rich metadata constitutes a plurality of attributes (for R1): (e.g. name, version, contributors roles, programming language, description of the purpose, science domain, key words, licence, PID, related identifiers) Examples of formal machine-readable metadata schemas are (e.g. Citation.CFF, .zenodo.json, codemeta.jsonld)",
        "id": "F:q3",
        "text": "Is the software described with rich metadata?"
    },
    {
        "answers": [
            {
                "id": "F:q4:a0",
                "text": "No metadata"
            },
            {
                "id": "F:q4:a1",
                "text": "Metadata does not include an identifier for the software"
            },
            {
                "id": "F:q4:a2",
                "text": "The identifier is captured in the metadata that describes the software"
            }
        ],
        "principle": "F3. Metadata clearly and explicitly include the identifier of the software they describe.",
        "guidance": "The identifier is recommended to be globally unique and persistent. Those features enable citability. F3 calls for that identifier to be included within the metadata record that the identifier points to",
        "id": "F:q4",
        "text": "Is the identifier included in the metadata that describes the software?"
    },
    {
        "answers": [
            {
                "id": "F:q5:a0",
                "text": "No metadata"
            },
            {
                "id": "F:q5:a1",
                "text": "Metadata is not structured"
            },
            {
                "id": "F:q5:a2",
                "text": "Metadata might be searchable and indexable but not FAIR"
            },
            {
                "id": "F:q5:a3",
                "text": "Metadata is structured in a FAIR way"
            }
        ],
        "principle": "F4. Metadata are FAIR, and are searchable and indexable.",
        "guidance": "Many of the questions here relate to making the metadata associated with software FAIR. Principles F2, F3, A2, R1, and R2 all relate to making the metadata associated with software FAIR. Here the focus is on that metadata being captured in a way that enables searching and indexing of that metadata. For instance, a codemeta file may hold the relevant metadata, but if it is not exposed (or integrated) in a way that enables indexing, then it will not fulfil this criterion. Here this consideration is not just that the metadata exists, but also that it is available in a system that enables it to be FAIR.",
        "id": "F:q5",
        "text": "Are metadata FAIR, searchable and indexable?"
    },
    {
        "answers": [
            {
                "id": "A:q0:a0",
                "text": "No access to software, or there are unspecified access conditions, or software is not retrievable by its identifier"
            },
            {
                "id": "A:q0:a1",
                "text": "Software is retrieved via its identifier with defined access conditions, but access is closed or mediated by individual arrangement"
            },
            {
                "id": "A:q0:a2",
                "text": "Stated minimal restrictions for software to be downloaded from an online location (e.g personal or group website or FTP server)"
            },
            {
                "id": "A:q0:a3",
                "text": "Software can be retrieved from a publicly-accessible code development repository, package or library manager or software registry or archive"
            }
        ],
        "id": "A:q0",
        "principle": "A1. Software is retrievable by its identifier using a standardised communications protocol.",
        "guidance": "Software is retrievable from: - a publicly-accessible code development repository (e.g. GitHub, GitLab, BitBucket, etc), - a package or library manager (e.g apt, CRAN, PyPI, etc), - a research software registry  (e.g. see this list), or - an archive.",
        "text": "Can the software be retrieved via its identifier using standardised protocols?"
    },
    {
        "answers": [
            {
                "id": "A:q1:a0",
                "text": "No metadata record exists"
            },
            {
                "id": "A:q1:a1",
                "text": "Metadata exists, but is not accessible via an identifier"
            },
            {
                "id": "A:q1:a2",
                "text": "Metadata is retrievable via an identifier"
            },
            {
                "id": "A:q1:a3",
                "text": "And is machine readable"
            }
        ],
        "id": "A:q1",
        "principle": "A1. Software is retrievable by its identifier using a standardised communications protocol.",
        "guidance": "Some formal machine-readable metadata schema exist specifically for software (e.g. Citation.CFF, .zenodo.json, codemeta.jsonld). Mechanisms for retrieving metadata include DataCite DOI metadata, encoding of metadata using schema.org on the page resolved to by the identifier, and retrieval via a package manager",
        "text": "Can metadata be retrieved via is identifier using standardised protocols?"
    },
    {
        "answers": [
            {
                "id": "A:q2:a0",
                "text": "No (e.g. a specialized client using a closed protocol might be required to download the software)"
            },
            {
                "id": "A:q2:a1",
                "text": "Protocol is not open or free and allows for authentication and authorisation"
            },
            {
                "id": "A:q2:a2",
                "text": "Protocol is open and free but does not allow for authentication and authorisation"
            },
            {
                "id": "A:q2:a3",
                "text": "Yes"
            }
        ],
        "id": "A:q2",
        "principle": "A1.1. The protocol is open, free, and universally implementable. A1.2. The protocol allows for an authentication and authorisation procedure, where necessary.",
        "guidance": "This question refers to the combinations of these two principles [define protocol] [describe authentication and authorisation]",
        "text": "Is the protocol open, free and universally implementable? and does it allow for authentication and autorisation procedures?"
    },
    {
        "answers": [
            {
                "id": "A:q3:a0",
                "text": "Not applicable, no metadata record exists"
            },
            {
                "id": "A:q3:a1",
                "text": "No, metadata is lost if software is no longer accessible"
            },
            {
                "id": "A:q3:a2",
                "text": "Unsure, whether the institution/registry provides this feature"
            },
            {
                "id": "A:q3:a3",
                "text": "Yes"
            }
        ],
        "id": "A:q3",
        "principle": "A2. Metadata are accessible, even when the software is no longer available.",
        "guidance": "Mostly a feature of the metadata registry",
        "text": "Are metadata accessible, even when the software is no longer available?"
    },
    {
        "answers": [
            {
                "id": "I:q0:a0",
                "text": "I:q0:a0"
            },
            {
                "id": "I:q0:a1",
                "text": "I:q0:a1"
            }
        ],
        "id": "I:q0",
        "principle": "",
        "guidance": "",
        "text": "I question 0"
    },
    {
        "answers": [
            {
                "id": "R:q0:a0",
                "text": "R:q0:a0"
            },
            {
                "id": "R:q0:a1",
                "text": "R:q0:a1"
            },
            {
                "id": "R:q0:a2",
                "text": "R:q0:a2"
            }
        ],
        "id": "R:q0",
        "principle": "",
        "guidance": "",
        "text": "R question 0"
    }
]
